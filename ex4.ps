%!PS-Adobe-3.0
%%BoundingBox: 0 0 -2147483648 0
%%HiResBoundingBox: 0 0 3.40161e+12 0
%%Title: pslib v4.2 document
%%Creator: pslib
%%CreationDate: Tue Oct 13 17:04:30 2015
%%LanguageLevel: 2
%%DocumentData: Binary
%%Orientation: Portrait
%%Pages: 1
%%EndComments

%%BeginProlog
250 dict begin
/! {bind def} bind def
/# {load def}!
/A /setgray #
/B /setdash #
/C /setrgbcolor #
/D /rlineto #
/E {dup stringwidth pop}!
/F /fill #
/G /rmoveto #
/H /sethsbcolor #
/I /setpattern #
/K /setcmykcolor #
/L /lineto #
/M /moveto #
/N /newpath #
/P /closepath #
/R /rotate #
/S /stroke #
/T /translate #
/U /grestore #
/V /gsave #
/W /setlinewidth #
/Y {findfont exch scalefont setfont}!
/Z /show #
/FP {true charpath flattenpath}!
/MS {/savematrix matrix currentmatrix def}!
/MR {savematrix setmatrix}!
/O {S 3 -1 roll 0 360 arc P F S}!
/X {M 1.414213562 mul 5 {dup} repeat -2 div dup G D neg 0 G neg D S}!
/x {M dup 0 G dup -2 mul dup 0 D exch dup G 0 exch D S}!
/FS {/fc exch def /fs {V fc F U} def}!
/FQ {/fs {} def}!
/O0 {/os {N} def}!
/O1 {/os {P S} def}!
/FO {fs os}!
/SP {M {D} repeat FO}!
/SV {0 exch M 0 D D D D D 0 D FO}!
/Sv {0 0 M D D 0 D D D D D 0 D D FO}!
/SB {M dup 0 D exch 0 exch D neg 0 D FO}!
/SC {N 3 -1 roll 0 360 arc FO}!
/SE {N MS T R scale 0 0 1 0 360 arc MR FO}!
/SD {M 4 {dup} repeat 0 G neg dup dup D exch D D FO}!
/SR {M MS R dup -2 div 0 G exch dup -2 div 0 exch G exch dup 0 D exch 0 exch D neg 0 D MR FO}!
/SS {M 1.414213562 mul dup dup dup -2 div dup G 0 D 0 exch D neg 0 D FO}!
/ST {M MS dup 0 exch G -60 R 1.732050808 mul dup 0 D -120 R 0 D MR FO}!
/SI {M MS dup neg 0 exch G 60 R 1.732050808 mul dup 0 D 120 R 0 D MR FO}!
/SA {M MS dup 0 exch G 0.726542528 mul -72 R dup 0 D 4 {72 R dup 0 D -144 R dup 0 D} repeat pop MR FO}!
/SH {M MS dup 0 G -120 R dup 0 D 4 {-60 R dup 0 D} repeat pop MR FO}!
/SN {M MS dup 0 exch G -36 R 1.175570505 mul dup 0 D 3 {-72 R dup 0 D} repeat pop MR FO}!
/SO {M MS 22.5 R dup 0 exch G -22.5 R 0.765366865 mul dup 0 D 6 {-45 R dup 0 D} repeat pop MR FO}!
/SW {N 2 copy 7 -3 roll arc L FO}!
/PSL_reencode {findfont dup length dict begin
  {1 index /FID ne {def}{pop pop} ifelse} forall
  exch /Encoding exch def currentdict end definefont pop
}!
/PSL_eps_begin {
  /PSL_eps_state save def
  /PSL_dict_count countdictstack def
  /PSL_op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth
  0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
}!
/PSL_eps_end {
  count PSL_op_count sub {pop} repeat
  countdictstack PSL_dict_count sub {end} repeat
  PSL_eps_state restore
}!
/Standard_Encoding [
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/space		/exclam		/quotedbl	/numbersign	/dollar		/percent	/ampersand	/quoteright
/parenleft	/parenright	/asterisk	/plus		/comma		/hyphen		/period		/slash
/zero		/one		/two		/three		/four		/five		/six		/seven
/eight		/nine		/colon		/semicolon	/less		/equal		/greater	/question
/at		/A		/B		/C		/D		/E		/F		/G
/H		/I		/J		/K		/L		/M		/N		/O
/P		/Q		/R		/S		/T		/U		/V		/W
/X		/Y		/Z		/bracketleft	/backslash	/bracketright	/asciicircum	/underscore
/quoteleft	/a		/b		/c		/d		/e		/f		/g
/h		/i		/j		/k		/l		/m		/n		/o
/p		/q		/r		/s		/t		/u		/v		/w
/x		/y		/z		/braceleft	/bar		/braceright	/asciitilde	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/exclamdown	/cent		/sterling	/fraction	/yen		/florin		/section
/currency	/quotesingle	/quotedblleft	/guillemotleft	/guilsinglleft	/guilsinglright	/fi		/fl
/.notdef	/endash		/dagger		/daggerdbl	/periodcentered	/.notdef	/paragraph	/bullet
/quotesinglbase	/quotedblbase	/quotedblright	/guillemotright	/ellipsis	/perthousand	/.notdef	/questiondown
/.notdef	/grave		/acute		/circumflex	/tilde		/macron		/breve		/dotaccent
/dieresis	/.notdef	/ring		/cedilla	/.notdef	/hungarumlaut	/ogonek		/caron
/emdash		/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/AE		/.notdef	/ordfeminine	/.notdef	/.notdef	/.notdef	/.notdef
/Lslash		/Oslash		/OE		/ordmasculine	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/ae		/.notdef	/.notdef	/.notdef	/dotlessi	/.notdef	/.notdef
/lslash		/oslash		/oe		/germandbls	/.notdef	/.notdef	/.notdef	/.notdef
] def
/PSL_font_encode 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 array astore def
/F0 {/Helvetica Y}!
/F1 {/Helvetica-Bold Y}!
/F2 {/Helvetica-Oblique Y}!
/F3 {/Helvetica-BoldOblique Y}!
/F4 {/Times-Roman Y}!
/F5 {/Times-Bold Y}!
/F6 {/Times-Italic Y}!
/F7 {/Times-BoldItalic Y}!
/F8 {/Courier Y}!
/F9 {/Courier-Bold Y}!
/F10 {/Courier-Oblique Y}!
/F11 {/Courier-BoldOblique Y}!
/F12 {/Symbol Y}!
/F13 {/AvantGarde-Book Y}!
/F14 {/AvantGarde-BookOblique Y}!
/F15 {/AvantGarde-Demi Y}!
/F16 {/AvantGarde-DemiOblique Y}!
/F17 {/Bookman-Demi Y}!
/F18 {/Bookman-DemiItalic Y}!
/F19 {/Bookman-Light Y}!
/F20 {/Bookman-LightItalic Y}!
/F21 {/Helvetica-Narrow Y}!
/F22 {/Helvetica-Narrow-Bold Y}!
/F23 {/Helvetica-Narrow-Oblique Y}!
/F24 {/Helvetica-Narrow-BoldOblique Y}!
/F25 {/NewCenturySchlbk-Roman Y}!
/F26 {/NewCenturySchlbk-Italic Y}!
/F27 {/NewCenturySchlbk-Bold Y}!
/F28 {/NewCenturySchlbk-BoldItalic Y}!
/F29 {/Palatino-Roman Y}!
/F30 {/Palatino-Italic Y}!
/F31 {/Palatino-Bold Y}!
/F32 {/Palatino-BoldItalic Y}!
/F33 {/ZapfChancery-MediumItalic Y}!
/F34 {/ZapfDingbats Y}!
/PSL_pathtextdict 26 dict def
/PSL_pathtext
  {PSL_pathtextdict begin
    /textheight exch def
    /just exch def
    /offset exch def
    /str exch def
    /pathdist 0 def
    /setdist offset def
    /charcount 0 def
    /justy just 4 idiv textheight mul 2 div neg def
    V flattenpath
	{movetoproc} {linetoproc}
	{curvetoproc} {closepathproc}
	pathforall
    U N
    end
  } def
PSL_pathtextdict begin
/movetoproc
  { /newy exch def /newx exch def
    /firstx newx def /firsty newy def
    /ovr 0 def
    newx newy transform
    /cpy exch def /cpx exch def
  } def
/linetoproc
  { /oldx newx def /oldy newy def
    /newy exch def /newx exch def
    /dx newx oldx sub def
    /dy newy oldy sub def
    /dist dx dup mul dy dup mul add sqrt def
    dist 0 ne
    { /dsx dx dist div ovr mul def
      /dsy dy dist div ovr mul def
      oldx dsx add oldy dsy add transform
      /cpy exch def /cpx exch def
      /pathdist pathdist dist add def
      {setdist pathdist le
	  {charcount str length lt
	      {setchar} {exit} ifelse}
	  { /ovr setdist pathdist sub def
	    exit}
	  ifelse
      } loop
    } if
  } def
/curvetoproc
  { (ERROR: No curveto's after flattenpath!)
    print
  } def
/closepathproc
  {firstx firsty linetoproc
    firstx firsty movetoproc
  } def
/setchar
  { /char str charcount 1 getinterval def
    /charcount charcount 1 add def
    /charwidth char stringwidth pop def
    V cpx cpy itransform T
      dy dx atan R
      0 justy M
      char show
      0 justy neg G
      currentpoint transform
      /cpy exch def /cpx exch def
    U /setdist setdist charwidth add def
  } def
end
/PSL_curved_text_labels
{ /bits exch def
  /PSL_clippath bits 1 and 1 eq def
  /PSL_placetext bits 2 and 0 eq def
  /PSL_strokeline bits 4 and 4 eq def
  /PSL_firstcall bits 32 and 32 eq def
  /PSL_lastcall bits 64 and 64 eq def
  /PSL_fillbox bits 128 and 128 eq def
  /PSL_drawbox bits 256 and 256 eq def
  /PSL_n1 PSL_n 1 sub def
  /PSL_m1 PSL_m 1 sub def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_CT_calcstringwidth
  PSL_CT_calclinedist
  PSL_CT_addcutpoints
  PSL_clippath PSL_firstcall and
  {clipsave N clippath} if
  PSL_setlinepen
  /PSL_nn1 PSL_nn 1 sub def
  /n 0 def
  /k 0 def
  /j 0 def
  /PSL_seg 0 def
  /PSL_xp PSL_nn array def
  /PSL_yp PSL_nn array def
  PSL_xp 0 PSL_xx 0 get put
  PSL_yp 0 PSL_yy 0 get put
  1 1 PSL_nn1
  { /i exch def
    /node_type PSL_kind i get def
    /j j 1 add def
    PSL_xp j PSL_xx i get put
    PSL_yp j PSL_yy i get put
    node_type 1 eq
    {n 0 eq
      {PSL_CT_drawline}
      {	PSL_CT_reversepath
	PSL_CT_textline} ifelse
      /j 0 def
      PSL_xp j PSL_xx i get put
      PSL_yp j PSL_yy i get put
    } if
  } for
  n 0 eq {PSL_CT_drawline} if
  PSL_lastcall
  {PSL_clippath
    {clip /PSL_clip_on true def} if N
  } if
} def
/PSL_CT_textline
{PSL_placetext
  {PSL_clippath
    {PSL_CT_clippath} {PSL_CT_placelabel} ifelse
  } if
  /n 0 def /k k 1 add def PSL_setlinepen
} def
/PSL_CT_calcstringwidth
{ /PSL_width PSL_m array def
  0 1 PSL_m1
  { /i exch def
    PSL_width i PSL_str i get stringwidth pop put
  } for
} def
/PSL_CT_calclinedist
{ /PSL_newx PSL_x 0 get def
  /PSL_newy PSL_y 0 get def
  /dist 0.0 def
  /PSL_dist PSL_n array def
  PSL_dist 0 0.0 put
  1 1 PSL_n1
  { /i exch def
    /PSL_oldx PSL_newx def
    /PSL_oldy PSL_newy def
    /PSL_newx PSL_x i get def
    /PSL_newy PSL_y i get def
    /dx PSL_newx PSL_oldx sub def
    /dy PSL_newy PSL_oldy sub def
    /dist dist dx dx mul dy dy mul add sqrt add def
    PSL_dist i dist put
  } for
} def
/PSL_CT_addcutpoints
{ /k 0 def
  /PSL_nc PSL_m 2 mul 1 add def
  /PSL_cuts PSL_nc array def
  /PSL_nc1 PSL_nc 1 sub def
  0 1 PSL_m1
  { /i exch def
    /dist PSL_dist PSL_node i get get def
    /halfwidth PSL_width i get 2 div PSL_gap_x add def
    PSL_cuts k dist halfwidth sub put
    /k k 1 add def
    PSL_cuts k dist halfwidth add put
    /k k 1 add def
  } for
  PSL_cuts k 100000.0 put
  /PSL_nn PSL_n PSL_m 2 mul add def
  /PSL_xx PSL_nn array def
  /PSL_yy PSL_nn array def
  /PSL_kind PSL_nn array def
  /j 0 def
  /k 0 def
  /dist 0.0 def
  0 1 PSL_n1
  { /i exch def
    /last_dist dist def
    /dist PSL_dist i get def
    k 1 PSL_nc1
    { /kk exch def
      /this_cut PSL_cuts kk get def
      dist this_cut gt
      { /ds dist last_dist sub def
	/f ds 0.0 eq {0.0} {dist this_cut sub ds div} ifelse def
	/i1 i 0 eq {0} {i 1 sub} ifelse def
	PSL_xx j PSL_x i get dup PSL_x i1 get sub f mul sub put
	PSL_yy j PSL_y i get dup PSL_y i1 get sub f mul sub put
	PSL_kind j 1 put
	/j j 1 add def
	/k k 1 add def
      } if
    } for
    dist PSL_cuts k get le
    {PSL_xx j PSL_x i get put PSL_yy j PSL_y i get put
      PSL_kind j 0 put
      /j j 1 add def
    } if
  } for
} def
/PSL_CT_reversepath
{PSL_xp j get PSL_xp 0 get lt
  {0 1 j 2 idiv
    { /left exch def
      /right j left sub def
      /tmp PSL_xp left get def
      PSL_xp left PSL_xp right get put
      PSL_xp right tmp put
      /tmp PSL_yp left get def
      PSL_yp left PSL_yp right get put
      PSL_yp right tmp put
    } for
  } if
} def
/PSL_CT_placelabel
{
  PSL_usebox
  {PSL_CT_clippath
    PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {PSL_setboxpen S} if N
  } if
  PSL_settxtrgb PSL_CT_placeline PSL_str k get PSL_gap_x PSL_just PSL_height PSL_pathtext
} def
/PSL_CT_clippath
{
  /H PSL_height 2 div PSL_gap_y add def
  /xoff j 1 add array def
  /yoff j 1 add array def
  /angle 0 def
  0 1 j {
    /ii exch def
    /x PSL_xp ii get def
    /y PSL_yp ii get def
    ii 0 eq {
      /x1 PSL_xp 1 get def
      /y1 PSL_yp 1 get def
      /dx x1 x sub def
      /dy y1 y sub def
    }
    { /i1 ii 1 sub def
      /x1 PSL_xp i1 get def
      /y1 PSL_yp i1 get def
      /dx x x1 sub def
      /dy y y1 sub def
    } ifelse
    dx 0.0 ne dy 0.0 ne and
    { /angle dy dx atan 90 add def} if
    /sina angle sin def
    /cosa angle cos def
    xoff ii H cosa mul put
    yoff ii H sina mul put
  } for
  PSL_xp 0 get xoff 0 get add PSL_yp 0 get yoff 0 get add M
  1 1 j {
    /ii exch def
    PSL_xp ii get xoff ii get add PSL_yp ii get yoff ii get add L
  } for
  j -1 0 {
    /ii exch def
    PSL_xp ii get xoff ii get sub PSL_yp ii get yoff ii get sub L
  } for P
} def
/PSL_CT_drawline
{
  /str 20 string def
  PSL_strokeline
  {PSL_CT_placeline PSL_setlinepen S} if
  /PSL_seg PSL_seg 1 add def
  /n 1 def
} def
/PSL_CT_placeline
{PSL_xp 0 get PSL_yp 0 get M
  1 1 j { /ii exch def PSL_xp ii get PSL_yp ii get L} for
} def
/PSL_straight_text_labels
{
  /bits exch def
  /PSL_clippath bits 1 and 0 eq def
  /PSL_rounded bits 16 and 16 eq def
  /PSL_fillbox bits 128 and 128 eq def
  /PSL_drawbox bits 256 and 256 eq def
  /PSL_m1 PSL_m 1 sub def
  /PSL_justx PSL_just 4 mod 1 sub 2 div neg def
  /PSL_justy PSL_just 4 idiv PSL_height mul 2 div neg def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_clippath
  {PSL_ST_clippath}
  {PSL_usebox {PSL_ST_clippath} if
    PSL_ST_placelabel
  } ifelse
} def
/PSL_ST_placelabel
{PSL_settxtrgb
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    V PSL_txt_x k get PSL_txt_y k get T
    PSL_angle k get R
    /BoxW PSL_str k get stringwidth pop def
    BoxW PSL_justx mul PSL_justy M
    PSL_str k get show
    U
  } for
} def
/PSL_ST_clippath
{PSL_rounded {PSL_ST_clippath_round} {PSL_ST_clippath_rect} ifelse
  PSL_usebox
  {PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {PSL_setboxpen S} if N
  }
  {clip /PSL_clip_on true def
  } ifelse
  N
} def
/PSL_ST_clippath_rect
{N
  /BoxH PSL_height PSL_gap_y 2 mul add def
  /DelY BoxH BoxH 0 3 array astore def
  PSL_usebox not {clipsave clippath} if
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    /MAT PSL_angle k get matrix R def
    /BoxW PSL_str k get stringwidth pop PSL_gap_x 2 mul add def
    /x0 0 BoxW PSL_justx mul add def
    /y0 0 PSL_justy add PSL_gap_y sub def
    /DelX 0 BoxW BoxW 3 array astore def
    x0 y0 MAT transform
    /dy exch def /dx exch def
    xp dx add yp dy add M
    0 1 2
    {
      /ii exch def
      x0 DelX ii get add y0 DelY ii get add MAT transform
      /dy exch def /dx exch def
      xp dx add yp dy add L
    } for P
  } for
} def
/PSL_ST_clippath_round
{N
  /PSL_justy2 PSL_just 4 idiv 2 div neg def
  /BoxR PSL_gap_x PSL_gap_y lt {PSL_gap_x} {PSL_gap_y} ifelse def
  /BoxH PSL_height PSL_gap_y 2 mul add def
  /y0 PSL_height PSL_gap_y 2 mul add PSL_justy2 mul def
  PSL_usebox not {clipsave clippath} if
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    /BoxW PSL_str k get stringwidth pop PSL_gap_x 2 mul add def
    /x0 BoxW PSL_justx mul def
    xp yp T PSL_angle k get R x0 y0 T
    BoxR 0 M
    BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct P
    x0 neg y0 neg T PSL_angle k get neg R xp neg yp neg T
  } for
} def
/PSL_clip_on false def
%%EndProlog

%%BeginSetup
/PSLevel /languagelevel where {pop languagelevel} {1} ifelse def
%%EndSetup

%%Page: 1 1

%%BeginPageSetup
0.0944882 0.0944882 scale
%%EndPageSetup

PSL_font_encode 0 get 0 eq {Standard_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
PSL_font_encode 1 get 0 eq {Standard_Encoding /Helvetica-Bold /Helvetica-Bold PSL_reencode PSL_font_encode 1 1 put} if
PSL_font_encode 2 get 0 eq {Standard_Encoding /Helvetica-Oblique /Helvetica-Oblique PSL_reencode PSL_font_encode 2 1 put} if
PSL_font_encode 3 get 0 eq {Standard_Encoding /Helvetica-BoldOblique /Helvetica-BoldOblique PSL_reencode PSL_font_encode 3 1 put} if
PSL_font_encode 4 get 0 eq {Standard_Encoding /Times-Roman /Times-Roman PSL_reencode PSL_font_encode 4 1 put} if
PSL_font_encode 5 get 0 eq {Standard_Encoding /Times-Bold /Times-Bold PSL_reencode PSL_font_encode 5 1 put} if
PSL_font_encode 6 get 0 eq {Standard_Encoding /Times-Italic /Times-Italic PSL_reencode PSL_font_encode 6 1 put} if
PSL_font_encode 7 get 0 eq {Standard_Encoding /Times-BoldItalic /Times-BoldItalic PSL_reencode PSL_font_encode 7 1 put} if
PSL_font_encode 8 get 0 eq {Standard_Encoding /Courier /Courier PSL_reencode PSL_font_encode 8 1 put} if
PSL_font_encode 9 get 0 eq {Standard_Encoding /Courier-Bold /Courier-Bold PSL_reencode PSL_font_encode 9 1 put} if
PSL_font_encode 10 get 0 eq {Standard_Encoding /Courier-Oblique /Courier-Oblique PSL_reencode PSL_font_encode 10 1 put} if
PSL_font_encode 11 get 0 eq {Standard_Encoding /Courier-BoldOblique /Courier-BoldOblique PSL_reencode PSL_font_encode 11 1 put} if
PSL_font_encode 13 get 0 eq {Standard_Encoding /AvantGarde-Book /AvantGarde-Book PSL_reencode PSL_font_encode 13 1 put} if
PSL_font_encode 14 get 0 eq {Standard_Encoding /AvantGarde-BookOblique /AvantGarde-BookOblique PSL_reencode PSL_font_encode 14 1 put} if
PSL_font_encode 15 get 0 eq {Standard_Encoding /AvantGarde-Demi /AvantGarde-Demi PSL_reencode PSL_font_encode 15 1 put} if
PSL_font_encode 16 get 0 eq {Standard_Encoding /AvantGarde-DemiOblique /AvantGarde-DemiOblique PSL_reencode PSL_font_encode 16 1 put} if
PSL_font_encode 17 get 0 eq {Standard_Encoding /Bookman-Demi /Bookman-Demi PSL_reencode PSL_font_encode 17 1 put} if
PSL_font_encode 18 get 0 eq {Standard_Encoding /Bookman-DemiItalic /Bookman-DemiItalic PSL_reencode PSL_font_encode 18 1 put} if
PSL_font_encode 19 get 0 eq {Standard_Encoding /Bookman-Light /Bookman-Light PSL_reencode PSL_font_encode 19 1 put} if
PSL_font_encode 20 get 0 eq {Standard_Encoding /Bookman-LightItalic /Bookman-LightItalic PSL_reencode PSL_font_encode 20 1 put} if
PSL_font_encode 21 get 0 eq {Standard_Encoding /Helvetica-Narrow /Helvetica-Narrow PSL_reencode PSL_font_encode 21 1 put} if
PSL_font_encode 22 get 0 eq {Standard_Encoding /Helvetica-Narrow-Bold /Helvetica-Narrow-Bold PSL_reencode PSL_font_encode 22 1 put} if
PSL_font_encode 23 get 0 eq {Standard_Encoding /Helvetica-Narrow-Oblique /Helvetica-Narrow-Oblique PSL_reencode PSL_font_encode 23 1 put} if
PSL_font_encode 24 get 0 eq {Standard_Encoding /Helvetica-Narrow-BoldOblique /Helvetica-Narrow-BoldOblique PSL_reencode PSL_font_encode 24 1 put} if
PSL_font_encode 25 get 0 eq {Standard_Encoding /NewCenturySchlbk-Roman /NewCenturySchlbk-Roman PSL_reencode PSL_font_encode 25 1 put} if
PSL_font_encode 26 get 0 eq {Standard_Encoding /NewCenturySchlbk-Italic /NewCenturySchlbk-Italic PSL_reencode PSL_font_encode 26 1 put} if
PSL_font_encode 27 get 0 eq {Standard_Encoding /NewCenturySchlbk-Bold /NewCenturySchlbk-Bold PSL_reencode PSL_font_encode 27 1 put} if
PSL_font_encode 28 get 0 eq {Standard_Encoding /NewCenturySchlbk-BoldItalic /NewCenturySchlbk-BoldItalic PSL_reencode PSL_font_encode 28 1 put} if
PSL_font_encode 29 get 0 eq {Standard_Encoding /Palatino-Roman /Palatino-Roman PSL_reencode PSL_font_encode 29 1 put} if
PSL_font_encode 30 get 0 eq {Standard_Encoding /Palatino-Italic /Palatino-Italic PSL_reencode PSL_font_encode 30 1 put} if
PSL_font_encode 31 get 0 eq {Standard_Encoding /Palatino-Bold /Palatino-Bold PSL_reencode PSL_font_encode 31 1 put} if
PSL_font_encode 32 get 0 eq {Standard_Encoding /Palatino-BoldItalic /Palatino-BoldItalic PSL_reencode PSL_font_encode 32 1 put} if
PSL_font_encode 33 get 0 eq {Standard_Encoding /ZapfChancery-MediumItalic /ZapfChancery-MediumItalic PSL_reencode PSL_font_encode 33 1 put} if
0 setlinecap
0 setlinejoin
10 setmiterlimit
1800 1800 T
20.32 W
0 A
0 1500 M
47 -1 D
48 -2 D
47 -4 D
47 -5 D
47 -7 D
46 -8 D
47 -9 D
92 -24 D
45 -14 D
45 -16 D
44 -16 D
44 -19 D
43 -19 D
42 -21 D
42 -22 D
41 -24 D
40 -25 D
40 -26 D
39 -27 D
37 -29 D
37 -30 D
36 -30 D
35 -32 D
34 -34 D
33 -34 D
31 -35 D
31 -36 D
29 -37 D
29 -38 D
27 -39 D
26 -40 D
24 -40 D
23 -41 D
22 -42 D
21 -43 D
19 -43 D
18 -44 D
16 -45 D
15 -44 D
14 -46 D
12 -46 D
11 -46 D
9 -46 D
8 -47 D
6 -47 D
5 -47 D
4 -47 D
2 -47 D
0 -48 D
-1 -47 D
-3 -47 D
-4 -48 D
-5 -47 D
-8 -47 D
-8 -46 D
-10 -46 D
-12 -46 D
-13 -46 D
-14 -45 D
-16 -45 D
-17 -44 D
-18 -43 D
-20 -43 D
-22 -43 D
-22 -41 D
-24 -41 D
-25 -40 D
-27 -40 D
-27 -38 D
-29 -38 D
-30 -36 D
-31 -36 D
-33 -35 D
-33 -33 D
-34 -33 D
-36 -31 D
-36 -30 D
-37 -30 D
-39 -28 D
-39 -26 D
-40 -26 D
-40 -24 D
-42 -23 D
-42 -22 D
-43 -20 D
-43 -19 D
-44 -17 D
-45 -16 D
-45 -15 D
-45 -13 D
-46 -12 D
-46 -11 D
-94 -16 D
-47 -6 D
-47 -4 D
-47 -3 D
-47 -2 D
-48 0 D
-47 2 D
-47 3 D
-47 4 D
-47 6 D
-94 16 D
-46 11 D
-46 12 D
-45 13 D
-45 15 D
-45 16 D
-44 17 D
-43 19 D
-43 20 D
-42 22 D
-42 23 D
-40 24 D
-40 26 D
-39 26 D
-39 28 D
-37 30 D
-36 30 D
-36 31 D
-34 33 D
-33 33 D
-33 35 D
-31 36 D
-30 36 D
-29 38 D
-27 38 D
-27 40 D
-25 40 D
-24 41 D
-22 41 D
-22 43 D
-20 43 D
-18 43 D
-17 44 D
-16 45 D
-14 45 D
-13 46 D
-12 46 D
-10 46 D
-8 46 D
-8 47 D
-5 47 D
-4 48 D
-3 47 D
-1 47 D
0 48 D
2 47 D
4 47 D
5 47 D
6 47 D
8 47 D
9 46 D
11 46 D
12 46 D
14 46 D
15 44 D
16 45 D
18 44 D
19 43 D
21 43 D
22 42 D
23 41 D
24 40 D
26 40 D
27 39 D
29 38 D
29 37 D
31 36 D
31 35 D
33 34 D
34 34 D
35 32 D
36 30 D
37 30 D
37 29 D
39 27 D
40 26 D
40 25 D
41 24 D
42 22 D
42 21 D
43 19 D
44 19 D
44 16 D
45 16 D
45 14 D
92 24 D
47 9 D
46 8 D
47 7 D
47 5 D
47 4 D
48 2 D
47 1 D
0 300 D
125 -125 D
-125 125 D
-125 -125 D
S
10.16 W
1061 1061 M
0 -17 D
1 -17 D
0 -52 D
-4 -68 D
-2 -17 D
-1 -17 D
-2 -17 D
-3 -17 D
-2 -17 D
-12 -68 D
-4 -17 D
-3 -17 D
-8 -34 D
-5 -17 D
-4 -16 D
-20 -68 D
-6 -17 D
-5 -16 D
-12 -34 D
-6 -16 D
-7 -17 D
-6 -17 D
-7 -16 D
-7 -17 D
-7 -16 D
-7 -17 D
-7 -16 D
-8 -17 D
-8 -16 D
-8 -17 D
-16 -32 D
-8 -17 D
-8 -16 D
-54 -96 D
-10 -16 D
-9 -16 D
-30 -48 D
-10 -15 D
-10 -16 D
-10 -15 D
-11 -16 D
-11 -15 D
-10 -16 D
-11 -15 D
-11 -16 D
-22 -30 D
-12 -15 D
-11 -15 D
-12 -15 D
-11 -15 D
-36 -45 D
-12 -14 D
-13 -15 D
-12 -14 D
-12 -15 D
-13 -14 D
-12 -14 D
-13 -15 D
-65 -70 D
-14 -13 D
-26 -28 D
-28 -26 D
-13 -14 D
-70 -65 D
-15 -13 D
-14 -12 D
-14 -13 D
-15 -12 D
-14 -12 D
-15 -13 D
-14 -12 D
-45 -36 D
-15 -11 D
-15 -12 D
-15 -11 D
-15 -12 D
-30 -22 D
-16 -11 D
-15 -11 D
-16 -10 D
-15 -11 D
-16 -11 D
-15 -10 D
-16 -10 D
-15 -10 D
-48 -30 D
-16 -9 D
-16 -10 D
-96 -54 D
-16 -8 D
-17 -8 D
-32 -16 D
-17 -8 D
-16 -8 D
-17 -8 D
-16 -7 D
-17 -7 D
-16 -7 D
-17 -7 D
-16 -7 D
-17 -6 D
-17 -7 D
-16 -6 D
-34 -12 D
-16 -5 D
-17 -6 D
-68 -20 D
-16 -4 D
-17 -5 D
-34 -8 D
-17 -3 D
-17 -4 D
-68 -12 D
-17 -2 D
-17 -3 D
-17 -2 D
-17 -1 D
-17 -2 D
-68 -4 D
-52 0 D
-17 1 D
S
20.32 W
0 0 1 C
0 A
{0 0 1 C} FS
O1
74 -1061 -1061 SA
5.08 W
0 0 M 169 F8 (Slickensides
) E /PSL_dim_w exch def FP pathbbox N /PSL_dim_h exch def pop /PSL_dim_d exch def pop
0 2100 M PSL_dim_w 2 div neg 0 G 169 F8 (Slickensides
) Z
%%PageTrailer
-1800 -1800 T 10.5833 10.5833 scale 0 A
showpage

%%Trailer

end
%%EOF
